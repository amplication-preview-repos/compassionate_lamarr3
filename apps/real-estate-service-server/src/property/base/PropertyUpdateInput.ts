/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsString, IsOptional, ValidateNested } from "class-validator";
import { DocumentUpdateManyWithoutPropertiesInput } from "./DocumentUpdateManyWithoutPropertiesInput";
import { Type } from "class-transformer";
import { RentUpdateManyWithoutPropertiesInput } from "./RentUpdateManyWithoutPropertiesInput";
import { TenantUpdateManyWithoutPropertiesInput } from "./TenantUpdateManyWithoutPropertiesInput";

@InputType()
class PropertyUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  address?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  city?: string | null;

  @ApiProperty({
    required: false,
    type: () => DocumentUpdateManyWithoutPropertiesInput,
  })
  @ValidateNested()
  @Type(() => DocumentUpdateManyWithoutPropertiesInput)
  @IsOptional()
  @Field(() => DocumentUpdateManyWithoutPropertiesInput, {
    nullable: true,
  })
  documents?: DocumentUpdateManyWithoutPropertiesInput;

  @ApiProperty({
    required: false,
    type: () => RentUpdateManyWithoutPropertiesInput,
  })
  @ValidateNested()
  @Type(() => RentUpdateManyWithoutPropertiesInput)
  @IsOptional()
  @Field(() => RentUpdateManyWithoutPropertiesInput, {
    nullable: true,
  })
  rents?: RentUpdateManyWithoutPropertiesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  state?: string | null;

  @ApiProperty({
    required: false,
    type: () => TenantUpdateManyWithoutPropertiesInput,
  })
  @ValidateNested()
  @Type(() => TenantUpdateManyWithoutPropertiesInput)
  @IsOptional()
  @Field(() => TenantUpdateManyWithoutPropertiesInput, {
    nullable: true,
  })
  tenants?: TenantUpdateManyWithoutPropertiesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  zipCode?: string | null;
}

export { PropertyUpdateInput as PropertyUpdateInput };
