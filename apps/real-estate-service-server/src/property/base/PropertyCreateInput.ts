/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsString, IsOptional, ValidateNested } from "class-validator";
import { DocumentCreateNestedManyWithoutPropertiesInput } from "./DocumentCreateNestedManyWithoutPropertiesInput";
import { Type } from "class-transformer";
import { RentCreateNestedManyWithoutPropertiesInput } from "./RentCreateNestedManyWithoutPropertiesInput";
import { TenantCreateNestedManyWithoutPropertiesInput } from "./TenantCreateNestedManyWithoutPropertiesInput";

@InputType()
class PropertyCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  address?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  city?: string | null;

  @ApiProperty({
    required: false,
    type: () => DocumentCreateNestedManyWithoutPropertiesInput,
  })
  @ValidateNested()
  @Type(() => DocumentCreateNestedManyWithoutPropertiesInput)
  @IsOptional()
  @Field(() => DocumentCreateNestedManyWithoutPropertiesInput, {
    nullable: true,
  })
  documents?: DocumentCreateNestedManyWithoutPropertiesInput;

  @ApiProperty({
    required: false,
    type: () => RentCreateNestedManyWithoutPropertiesInput,
  })
  @ValidateNested()
  @Type(() => RentCreateNestedManyWithoutPropertiesInput)
  @IsOptional()
  @Field(() => RentCreateNestedManyWithoutPropertiesInput, {
    nullable: true,
  })
  rents?: RentCreateNestedManyWithoutPropertiesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  state?: string | null;

  @ApiProperty({
    required: false,
    type: () => TenantCreateNestedManyWithoutPropertiesInput,
  })
  @ValidateNested()
  @Type(() => TenantCreateNestedManyWithoutPropertiesInput)
  @IsOptional()
  @Field(() => TenantCreateNestedManyWithoutPropertiesInput, {
    nullable: true,
  })
  tenants?: TenantCreateNestedManyWithoutPropertiesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  zipCode?: string | null;
}

export { PropertyCreateInput as PropertyCreateInput };
